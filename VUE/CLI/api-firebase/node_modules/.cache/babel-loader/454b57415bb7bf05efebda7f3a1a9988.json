{"remainingRequest":"/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/node_modules/babel-loader/lib/index.js!/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/src/store/index.js","dependencies":[{"path":"/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/src/store/index.js","mtime":1634918749609},{"path":"/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9OdWV2by9Eb2N1bWVudHMvR2l0SHViL1BlcnNvbmFsL1ZVRS9DTEkvYXBpLWZpcmViYXNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3RvcmUoewogIHN0YXRlOiB7CiAgICB0YXJlYXM6IFtdLAogICAgdGFyZWE6IHsKICAgICAgbm9tYnJlOiAnJywKICAgICAgY2F0ZWdvcmlhczogW10sCiAgICAgIGVzdGFkbzogJycsCiAgICAgIG51bWVybzogMAogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBjYXJnYXI6IGZ1bmN0aW9uIGNhcmdhcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS50YXJlYXMgPSBwYXlsb2FkOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnRhcmVhcy5wdXNoKHBheWxvYWQpOwogICAgfSwKICAgIGVsaW1pbmFyOiBmdW5jdGlvbiBlbGltaW5hcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS50YXJlYXMgPSBzdGF0ZS50YXJlYXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uaWQgIT09IHBheWxvYWQ7CiAgICAgIH0pOwogICAgfSwKICAgIHRhcmVhOiBmdW5jdGlvbiB0YXJlYShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBpZiAoIXN0YXRlLnRhcmVhcy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IHBheWxvYWQ7CiAgICAgIH0pKSB7CiAgICAgICAgcm91dGVyLnB1c2goJy8nKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHN0YXRlLnRhcmVhID0gc3RhdGUudGFyZWFzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5pZCA9PT0gcGF5bG9hZDsKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudGFyZWFzID0gc3RhdGUudGFyZWFzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkID09PSBwYXlsb2FkLmlkID8gcGF5bG9hZCA6IGl0ZW07CiAgICAgIH0pOwogICAgICByb3V0ZXIucHVzaCgnLycpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgY2FyZ2FyTG9jYWxTdG9yYWdlOiBmdW5jdGlvbiBjYXJnYXJMb2NhbFN0b3JhZ2UoX3JlZikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHJlcywgZGF0YURCLCBhcnJheVRhcmVhcywgaWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwczovL3VkZW15LWFwaS1iNTliNi1kZWZhdWx0LXJ0ZGIuZmlyZWJhc2Vpby5jb20vdGFyZWFzLmpzb24nKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGRhdGFEQiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBhcnJheVRhcmVhcyA9IFtdOwoKICAgICAgICAgICAgICAgIGZvciAoaWQgaW4gZGF0YURCKSB7CiAgICAgICAgICAgICAgICAgIGFycmF5VGFyZWFzLnB1c2goZGF0YURCW2lkXSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJyYXlUYXJlYXMpOwogICAgICAgICAgICAgICAgY29tbWl0KCdjYXJnYXInLCBhcnJheVRhcmVhcyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE0XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzZXRUYXJlYXM6IGZ1bmN0aW9uIHNldFRhcmVhcyhfcmVmMiwgdGFyZWEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzLCBkYXRhREI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cHM6Ly91ZGVteS1hcGktYjU5YjYtZGVmYXVsdC1ydGRiLmZpcmViYXNlaW8uY29tL3RhcmVhcy8iLmNvbmNhdCh0YXJlYS5pZCwgIi5qc29uIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUFVUJywKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodGFyZWEpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgZGF0YURCID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhREIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldCcsIHRhcmVhKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlVGFyZWFzOiBmdW5jdGlvbiBkZWxldGVUYXJlYXMoX3JlZjMsIGlkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnZWxpbWluYXInLCBpZCk7CiAgICB9LAogICAgc2V0VGFyZWE6IGZ1bmN0aW9uIHNldFRhcmVhKF9yZWY0LCBpZCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICBjb21taXQoJ3RhcmVhJywgaWQpOwogICAgfSwKICAgIHVwZGF0ZVRhcmVhOiBmdW5jdGlvbiB1cGRhdGVUYXJlYShfcmVmNSwgdGFyZWEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzLCBkYXRhREI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cHM6Ly91ZGVteS1hcGktYjU5YjYtZGVmYXVsdC1ydGRiLmZpcmViYXNlaW8uY29tL3RhcmVhcy8iLmNvbmNhdCh0YXJlYS5pZCwgIi5qc29uIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0YXJlYSkKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBkYXRhREIgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlJywgZGF0YURCKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDMudDApOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/Nuevo/Documents/GitHub/Personal/VUE/CLI/api-firebase/src/store/index.js"],"names":["createStore","router","state","tareas","tarea","nombre","categorias","estado","numero","mutations","cargar","payload","set","push","eliminar","filter","item","id","find","update","map","actions","cargarLocalStorage","commit","fetch","res","json","dataDB","arrayTareas","console","log","setTareas","method","headers","body","JSON","stringify","deleteTareas","setTarea","updateTarea","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport router from '../router'\n\nexport default createStore({\n  state: {\n    tareas:[],\n    tarea:{\n      nombre:'',\n      categorias:[],\n      estado:'',\n      numero:0\n    }\n  },\n  mutations: {\n    cargar(state,payload){\n      state.tareas=payload\n    },\n    set(state,payload){\n      state.tareas.push(payload)\n      \n    },\n    eliminar(state,payload){\n      state.tareas=state.tareas.filter(item=>item.id!==payload)\n      \n    },\n    tarea(state,payload){\n      if(!state.tareas.find(item=>item.id===payload)){\n        router.push('/')\n        return\n      }\n      state.tarea=state.tareas.find(item=>item.id===payload)\n    },\n    update(state,payload){\n      state.tareas=state.tareas.map(item=>item.id===payload.id?payload:item)\n      router.push('/')\n      \n    }\n  },\n  actions: {\n    async cargarLocalStorage({commit}){\n      try {\n        const res = await fetch('https://udemy-api-b59b6-default-rtdb.firebaseio.com/tareas.json')\n        const dataDB = await res.json()\n        const arrayTareas=[]\n\n        for(let id in dataDB){\n          arrayTareas.push(dataDB[id])\n        }\n        console.log(arrayTareas)\n        commit('cargar',arrayTareas)\n\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    async setTareas({commit},tarea){\n      try {\n        const res = await fetch(`https://udemy-api-b59b6-default-rtdb.firebaseio.com/tareas/${tarea.id}.json`,{\n          method:'PUT',\n          headers:{\n            'Content-type':'application/json'\n          },\n          body:JSON.stringify(tarea)\n        })\n        const dataDB=await res.json()\n        \n        console.log(dataDB)\n\n      } catch (error) {\n        console.log(error)\n      }\n      commit('set',tarea)\n    },\n    deleteTareas({commit},id){\n      commit('eliminar',id)\n    },\n    setTarea({commit},id){\n      commit('tarea',id)\n    },\n    async updateTarea({commit},tarea){\n      try {\n        const res = await fetch(`https://udemy-api-b59b6-default-rtdb.firebaseio.com/tareas/${tarea.id}.json`, {\n          method:'PATCH',\n          body:JSON.stringify(tarea)\n        })\n        const dataDB=await res.json()\n        commit('update',dataDB)\n      } catch (error) {\n        console.log(error)\n      }\n      \n    }\n  },\n  modules: {\n  }\n})"]}]}